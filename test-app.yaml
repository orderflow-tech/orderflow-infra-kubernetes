apiVersion: v1
kind: Namespace
metadata:
  name: nginx-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-test
  namespace: nginx-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-test
  template:
    metadata:
      labels:
        app: nginx-test
    spec:
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      containers:
      - name: nginx
        image: nginx:1.25.3@sha256:b1969df65e82b2bc5495b57a0397e89bf5c3fe51ec2c56449fd3b69ae5fb45c1
        ports:
        - containerPort: 80
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: nginx-temp
          mountPath: /var/cache/nginx
        - name: nginx-logs
          mountPath: /var/log/nginx
      volumes:
      - name: nginx-temp
        emptyDir: {}
      - name: nginx-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-test
  namespace: nginx-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: nginx-test
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nginx-network-policy
  namespace: nginx-app
spec:
  podSelector:
    matchLabels:
      app: nginx-test
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 80